namespace math {
    export
    template<pint W>
    deftype sint <: fixpoint<W,0> ()
    {
        methods {
            function positive() : bool {
                chp {
                    self := fxp::positive<W,0>(x)
                }
            }
        }
    }

    export
    namespace sint_ops {
        template<pint W,N>
        function clsl(sint<W> v) : sint<W> {
            chp {
                self.x := v.x << N
            }
        }
    }
}
